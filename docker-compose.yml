version: '3'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - dhparam:/etc/nginx/dhparam
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  nginx-acme:
    image: nginxproxy/acme-companion
    restart: always
    depends_on:
      - website
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - acme:/etc/acme.sh
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam:ro
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/var/run/docker.sock:ro

  website:
    build: .
    expose:
      - "80"
    environment:
      AUTH_USERNAME:
      AUTH_PASSWORD:
      VIRTUAL_HOST: $SITE_HOST
      LETSENCRYPT_HOST: $SITE_HOST
      LETSENCRYPT_EMAIL:

  psql:
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    healthcheck:
      test: pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"
      interval: 10s
      timeout: 2s
      retries: 10

  nocodb:
    image: nocodb/nocodb
    depends_on:
      psql:
        condition: service_healthy
    restart: always
    expose:
      - "8080"
    environment:
      NC_DB: "pg://psql:5432?user=$POSTGRES_USER&p=$POSTGRES_PASSWORD&d=$POSTGRES_DB"
      VIRTUAL_HOST: $DATA_HOST
      LETSENCRYPT_HOST: $DATA_HOST
      LETSENCRYPT_EMAIL:


volumes:
  db_data:
  certs:
  vhost:
  html:
  acme:
  dhparam:
  conf: